package com.uek.java;
/**
 *  类（对事物的抽象（抽出相似的部分））：
 *  包含的基本成员：
 *  	1）静态属性（类所拥有的特征）；
 *  	2）动态行为（类所拥有的功能行为）；
 *  
 *  局部变量和成员变量的区别：
 *  1）声明位置：局部变量在方法或代码块中；
 *                            成员变量方法外，类体中；
 *  2）作用域：局部变量只限于本方法中；
 *                          成员变量是整个类中；
 * 3) 内存位置：局部变量存储栈
 *                          成员变量存储堆中（成员变量用来存储对象所封装的数据）
 */
// 构建了一个person类的模板：
//1.定义一个类的语法：[修饰符] class 类名{ 类体； }
class Person{
	//2.设计一个类的静态属性（根据业务需求设计）：   成员变量
	//语法：[修饰符] 属性类型(任何类型) 属性名(见名知意) 初始值；
	public String name;
	public int age;
	public char sex;
	//3.设计一个类的动态行为：     成员方法
	//语法：[修饰符] 返回值类型 方法名(形参列表){}
	//吃：
	public void eat() {
		System.out.println(name +",在吃饭！");
	}
	//自我介绍：
	public void show() {
		System.out.println("名字：" + name +"，年龄："+age+",性别："+sex);
	}
}

//测试：
public class ClassTest {
	public static void main(String[] args) {
		
		//1. 创建一个类的对象：
		//语法：数据类型(引用类型) 对象名 = new 构造方法();
		//当构建好一个对象时，属性会有默认值；
		Person p1 = new Person();
		//2. 对象的本质就是用来存储数据（用静态属性来存储数据）
		//语法：对象名.属性
		p1.name = "张三";
		p1.age = 20;
		p1.sex = '男';
		//3. 调用对象的方法：
		//语法: 对象名.方法
		p1.eat();
		p1.show();
	}
}





