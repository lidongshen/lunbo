1 写注册界面
	1.1 extends JFrame
	1.2 定义组件，定义成实例成员变量
		private jlabel jl1,jl2,jl3,jl4,jl5;
		private jtextfiled jt1,jt2,jt3;
		private jbutton jb1,jb2;
		private jpasswordfiled jp1,jp2;
		
		
	1.3 init
		
		1.3.1 new 组件
			jl1 = new jlabel("用户名");
			jl2 = new jlabel("密码");
			jl3 = new jlabel("确认密码");
			jl4 = new jlabel("签名");
			jl5 = new jlabel("头像");
			
			jt1 = new jtextfiled(20);
			jt2 = new jtextfiled(20);
			jt3 = new jtextfiled(20);
			
			jp1 = new jpasswordfiled(20);
			jp2 = new jpasswordfiled(20);
			
			jb1 = new jbutton("重置");
			jb2 = new jbutton("注册");
		1.3.2 设置组件的关系 add
			this.setlayout(new gridlayout);
			this.add(jl1);this.add(jt1);
			this.add(jl2);this.add(jp1);
			this.add(jl3);this.add(jp2);
			this.add(jl4);this.add(jt2);
			this.add(jl5);this.add(jt3);
			this.add(jb1);this.add(jb2);
		1.3.3 设置this的相关属性 最后显示
			this.settilte("注册界面");
			this.pick();
			this.setlocatiom(200,200);
			this.setdefalut..(jfram.exit_on_..);
			this.setvisiable(true);
2 给注册界面的注册按钮加监听事件 匿名内部类
	2.1 收集界面输入 getText
			String name = jt1.getText();
			String passWord = jp1.getText();
			String repassWord = jp2.getText();
			String qianMing = jt2.getText();
			String heared = jt3.getText();
	2.2 根据协议拼接准备发送给服务器的字符串
			String returnMeseage = "1," + name +","+passWord+","+qianMing+","+heared;
	2.3 发送(假设已经有Client.selfSocekt 了 所有客户端和服务器发送的时候就是公用这个socket)
		if(passWord.equlas(repassWord)){
		printstream ps = new printstream(client.selfSocekt.getoutputstream);
		ps.println(returnMeseage);
		ps.flush();}
		else{
		jop.showmsesage..(null,"两次密码不对");
		}
3 服务器接收到客户端发送过来的注册请求做相应de处理（默认线程类已经在了）
	
	3.1 根据协议解析需要的数据 split
		String name = str[1];
		String passWord = str[2];
		string qianMing =str[3];
		String heared = str[4];
		String returnMeseage = null；
	3.2 连接数据库做需要的操作
	
		3.2.1 加载驱动
		Class.forName("com.mysql.jdbc.Driver");
		3.2.1 获取连接 建立桥梁
		Connetion conn = Drivermange.gconnection("jdbc:mysql://localhost:3306/t-test","root","root");
		3.3.3 准备小推车
		Statement stat = conn.creatstatement();
		3.3.4 准备sql
		String sql = "select * from t_user where name = '"+name+"'"
		
		3.3.5 执行 , 并返回结果ResultSet(如果是查询)
		ResultSet rs = stat.executeQuery(sql);
		3.3.6 如果是 查询才解析结果，否则没有
		if(rs.next())
		{
			returnMessage = "1,nook";
		}else
			{
						
			 sql = "insert into t_user(name,password,qianming,header) values('"+name+"','"+passWord+"','"+qianMing+"','"+heared+"')";
							
			stat.executeUpdate(sql);
							
			returnMessage = "1,ok";
			}
		3.3.7 关闭数据库打开的资源
				stat.close();
				conn.close();
				
4 根据处理的结果给客户端返回相应的信息
	4.1
		
		揉在3.2中准备返回给客户端的消息，根据协议
		
	4.2 发送给客户端信息
		ps.println(returnMessage);
		ps.flush();


5 客户端接收到服务器的返回 （默认线程类已经在了）
	
	5.1 根据协议解析需要的数据
		if()
	5.2 更新客户端
		
		几种情况
			1 从FrameUtils找到之前的页面，更新该页面的部分 jPanel的updateUI jta.setText()
			
			2 new 一个界面 并显示









